# Copyright 2023 Akretion - Raphaël Valyi <raphael.valyi@akretion.com>
# License LGPL-3.0 or later (https://www.gnu.org/licenses/lgpl-3.0.en.html).
# Generated by https://github.com/akretion/xsdata-odoo
#
import textwrap
from odoo import fields, models
from .tipos import (
    TSTPINSC134,
    TIdeEmpregador,
    TIdeEventoFolhaMensal,
)

__NAMESPACE__ = "http://www.esocial.gov.br/schema/evt/evtContratAvNP/v_S_01_01_00"


class ESocial(models.AbstractModel):
    "S-1270 - Contratação de Trabalhadores Avulsos Não Portuários"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.esocial"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial"

    eso11_evtContratAvNP = fields.Many2one(
        comodel_name="eso.11.evtcontratavnp",
        string="Evento Contratação",
        xsd_required=True,
        help=(
            "Evento Contratação de Trabalhadores Avulsos Não "
            "Portuários.\nCHAVE_GRUPO: {Id}\nREGRA:REGRA_ENVIO_PROC_FECHAMENTO"
            "\nREGRA:REGRA_EVENTOS_EXTEMP\nREGRA:REGRA_EVE_FOPAG_IND_RETIFICAC"
            "AO\nREGRA:REGRA_EVE_FOPAG_PERMITE_EXCLUSAO\nREGRA:REGRA_EVE_FOPAG"
            "_SIMPLIFICADO\nREGRA:REGRA_EXISTE_INFO_EMPREGADOR\nREGRA:REGRA_ME"
            "SMO_PROCEMI\nREGRA:REGRA_VALIDA_EMPREGADOR"
        ),
    )


class EvtContratAvNp(models.AbstractModel):
    """Evento Contratação de Trabalhadores Avulsos Não Portuários.
    CHAVE_GRUPO: {Id}
    REGRA:REGRA_ENVIO_PROC_FECHAMENTO
    REGRA:REGRA_EVENTOS_EXTEMP
    REGRA:REGRA_EVE_FOPAG_IND_RETIFICACAO
    REGRA:REGRA_EVE_FOPAG_PERMITE_EXCLUSAO
    REGRA:REGRA_EVE_FOPAG_SIMPLIFICADO
    REGRA:REGRA_EXISTE_INFO_EMPREGADOR
    REGRA:REGRA_MESMO_PROCEMI
    REGRA:REGRA_VALIDA_EMPREGADOR"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.evtcontratavnp"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial.EvtContratAvNp"

    eso11_ideEvento = fields.Many2one(
        comodel_name="eso.11.tideeventofolhamensal",
        string="ideEvento",
        xsd_required=True,
        xsd_type="T_ideEvento_folha_mensal",
    )

    eso11_ideEmpregador = fields.Many2one(
        comodel_name="eso.11.tideempregador",
        string="ideEmpregador",
        xsd_required=True,
        xsd_type="T_ideEmpregador",
    )

    eso11_remunAvNP = fields.One2many(
        "eso.11.remunavnp",
        "eso11_remunAvNP_evtContratAvNP_id",
        string="Remuneração dos trabalhadores avulsos",
        help=(
            "Remuneração dos trabalhadores avulsos não "
            "portuários\nDESCRICAO_COMPLETA:Grupo que apresenta a remuneração "
            "dos trabalhadores avulsos não portuários, de forma totalizada por"
            " estabelecimento contratante.\nCHAVE_GRUPO: {tpInsc}, {nrInsc}, "
            "{codLotacao}"
        ),
    )

    eso11_Id = fields.Char(string="Id", xsd_required=True, xsd_type="TS_Id")


class RemunAvNp(models.AbstractModel):
    """Remuneração dos trabalhadores avulsos não portuários
    DESCRICAO_COMPLETA:Grupo que apresenta a remuneração dos trabalhadores avulsos
    não portuários, de forma totalizada por estabelecimento contratante.
    CHAVE_GRUPO: {tpInsc}, {nrInsc}, {codLotacao}"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.remunavnp"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial.EvtContratAvNp.RemunAvNp"

    eso11_tpInsc = fields.Selection(
        TS_TPINSC_1_3_4,
        string="o código correspondente ao tipo",
        xsd_required=True,
        xsd_type="TS_tpInsc_1_3_4",
        help=("o código correspondente ao tipo de inscrição, conforme Tabela 05."),
    )

    eso11_nrInsc = fields.Char(
        string="número de inscrição do estabelecimento",
        xsd_required=True,
        xsd_type="TS_nrInsc_12_14",
        help=(
            "número de inscrição do estabelecimento do contribuinte de acordo "
            "com o tipo de inscrição indicado no campo "
            "{remunAvNP/tpInsc}(./tpInsc).\nValidação: Deve ser um número de "
            "inscrição válido e existente na Tabela de Estabelecimentos "
            "(S-1005)."
        ),
    )

    eso11_codLotacao = fields.Char(
        string="código atribuído pelo empregador",
        xsd_required=True,
        xsd_type="TS_codigo_esocial",
        help=(
            "código atribuído pelo empregador para a lotação "
            "tributária.\nValidação: Deve ser um código válido e existente na "
            "Tabela de Lotações Tributárias (S-1020)."
        ),
    )

    eso11_vrBcCp00 = fields.Float(
        string="Valor da base de cálculo",
        xsd_required=True,
        xsd_type="TS_valorMonetario",
        help=(
            "Valor da base de cálculo da contribuição previdenciária sobre a "
            "remuneração dos trabalhadores avulsos não portuários."
        ),
    )

    eso11_vrBcCp15 = fields.Float(
        string="Valor da base de cálculo (vrBcCp15)",
        xsd_required=True,
        xsd_type="TS_valorMonetario",
        help=(
            "Valor da base de cálculo da contribuição adicional para o "
            "financiamento dos benefícios de aposentadoria especial após 15 "
            "anos de contribuição."
        ),
    )

    eso11_vrBcCp20 = fields.Float(
        string="Valor da base de cálculo (vrBcCp20)",
        xsd_required=True,
        xsd_type="TS_valorMonetario",
        help=(
            "Valor da base de cálculo da contribuição adicional para o "
            "financiamento dos benefícios de aposentadoria especial após 20 "
            "anos de contribuição."
        ),
    )

    eso11_vrBcCp25 = fields.Float(
        string="Valor da base de cálculo (vrBcCp25)",
        xsd_required=True,
        xsd_type="TS_valorMonetario",
        help=(
            "Valor da base de cálculo da contribuição adicional para o "
            "financiamento dos benefícios de aposentadoria especial após 25 "
            "anos de contribuição."
        ),
    )

    eso11_vrBcCp13 = fields.Float(
        string="Valor da base de cálculo (vrBcCp13)",
        xsd_required=True,
        xsd_type="TS_valorMonetario",
        help=(
            "Valor da base de cálculo da contribuição previdenciária sobre o "
            "13° salário dos trabalhadores avulsos não portuários contratados."
        ),
    )

    eso11_vrBcFgts = fields.Float(
        string="Valor da base de cálculo do FGTS sobre",
        xsd_required=True,
        xsd_type="TS_valorMonetario",
        help=(
            "Valor da base de cálculo do FGTS sobre a remuneração dos "
            "trabalhadores avulsos não portuários contratados."
        ),
    )

    eso11_vrDescCP = fields.Float(
        string="o valor total da contribuição descontada",
        xsd_required=True,
        xsd_type="TS_valorMonetario",
        help=(
            "o valor total da contribuição descontada dos trabalhadores "
            "avulsos não portuários."
        ),
    )
