# Copyright 2023 Akretion - Raphaël Valyi <raphael.valyi@akretion.com>
# License LGPL-3.0 or later (https://www.gnu.org/licenses/lgpl-3.0.en.html).
# Generated by https://github.com/akretion/xsdata-odoo
#
import textwrap
from odoo import fields, models
from .tipos import (
    TSCRDIA,
    TSCRMEN,
    TIdeEmpregador,
    TIdeEventoRetornoMensal,
)

__NAMESPACE__ = "http://www.esocial.gov.br/schema/evt/evtIrrf/v_S_01_01_00"

"Indicativo de existência de valores de bases ou de tributos."
INFOIRRF_INDEXISTINFO = [
    ("1", "Há informações de IRRF"),
    ("2", "Há movimento, porém não há informações de IRRF"),
    ("3", "Não há movimento no período informado em {perApur}(5012_ideEvento_perApur)"),
]


class ESocial(models.AbstractModel):
    """S-5012 - Imposto de Renda Retido na Fonte Consolidado por
    Contribuinte"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.esocial"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial"

    eso11_evtIrrf = fields.Many2one(
        comodel_name="eso.11.evtirrf",
        string="Evento IRRF Consolidado por Contribuinte",
        xsd_required=True,
        help=(
            "Evento IRRF Consolidado por "
            "Contribuinte.\nDESCRICAO_COMPLETA:Evento Imposto de Renda Retido "
            "na Fonte Consolidado por Contribuinte.\nCHAVE_GRUPO: {Id}"
        ),
    )


class EvtIrrf(models.AbstractModel):
    """Evento IRRF Consolidado por Contribuinte.
    DESCRICAO_COMPLETA:Evento Imposto de Renda Retido na Fonte Consolidado por
    Contribuinte.
    CHAVE_GRUPO: {Id}"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.evtirrf"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial.EvtIrrf"

    eso11_ideEvento = fields.Many2one(
        comodel_name="eso.11.tideeventoretornomensal",
        string="ideEvento",
        xsd_required=True,
        xsd_type="T_ideEvento_retorno_mensal",
    )

    eso11_ideEmpregador = fields.Many2one(
        comodel_name="eso.11.tideempregador",
        string="ideEmpregador",
        xsd_required=True,
        xsd_type="T_ideEmpregador",
    )

    eso11_infoIRRF = fields.Many2one(
        comodel_name="eso.11.infoirrf",
        string="Informações relativas ao Imposto",
        xsd_required=True,
        help="Informações relativas ao Imposto de Renda.",
    )

    eso11_Id = fields.Char(string="Id", xsd_required=True, xsd_type="TS_Id_retorno")


class InfoIrrf(models.AbstractModel):
    "Informações relativas ao Imposto de Renda."
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.infoirrf"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial.EvtIrrf.InfoIrrf"

    eso11_nrRecArqBase = fields.Char(
        string="nrRecArqBase", xsd_required=True, xsd_type="TS_nrRecArqBase"
    )

    eso11_indExistInfo = fields.Selection(
        INFOIRRF_INDEXISTINFO, string="indExistInfo", xsd_required=True
    )

    eso11_infoCRMen = fields.One2many(
        "eso.11.infocrmen",
        "eso11_infoCRMen_infoIRRF_id",
        string="Totalizador do IRRF por CR mensal",
        help=(
            "Totalizador do IRRF por CR "
            "mensal.\nDESCRICAO_COMPLETA:Informações consolidadas do IRRF, por"
            " Código de Receita - CR mensal.\nEvento de origem: "
            "S-5002.\nCHAVE_GRUPO: {CRMen}\nCONDICAO_GRUPO: OC"
        ),
    )

    eso11_infoCRDia = fields.One2many(
        "eso.11.infocrdia",
        "eso11_infoCRDia_infoIRRF_id",
        string="Totalizador do IRRF por CR diário",
        help=(
            "Totalizador do IRRF por CR "
            "diário.\nDESCRICAO_COMPLETA:Informações consolidadas do IRRF, por"
            " Código de Receita - CR diário.\nEvento de origem: "
            "S-5002.\nCHAVE_GRUPO: {perApurDia}, {CRDia}\nCONDICAO_GRUPO: OC"
        ),
    )


class InfoCrmen(models.AbstractModel):
    """Totalizador do IRRF por CR mensal.
    DESCRICAO_COMPLETA:Informações consolidadas do IRRF, por Código de Receita - CR
    mensal.
    Evento de origem: S-5002.
    CHAVE_GRUPO: {CRMen}
    CONDICAO_GRUPO: OC"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.infocrmen"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial.EvtIrrf.InfoIrrf.InfoCrmen"

    eso11_CRMen = fields.Selection(
        TS_CRMEN, string="CRMen", xsd_required=True, xsd_type="TS_CRMen"
    )

    eso11_vrCRMen = fields.Float(
        string="Valor correspondente ao Código",
        xsd_required=True,
        xsd_type="TS_valorMonetario_positivo",
        help=(
            "Valor correspondente ao Código de Receita - CR indicado em "
            "{CRMen}(./CRMen)."
        ),
    )

    eso11_vrCRMenSusp = fields.Float(
        string="Valor",
        xsd_type="TS_valorMonetario",
        help=(
            "Valor com exigibilidade suspensa correspondente ao Código de "
            "Receita - CR indicado em {CRMen}(./CRMen)."
        ),
    )


class InfoCrdia(models.AbstractModel):
    """Totalizador do IRRF por CR diário.
    DESCRICAO_COMPLETA:Informações consolidadas do IRRF, por Código de Receita - CR
    diário.
    Evento de origem: S-5002.
    CHAVE_GRUPO: {perApurDia}, {CRDia}
    CONDICAO_GRUPO: OC"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.infocrdia"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial.EvtIrrf.InfoIrrf.InfoCrdia"

    eso11_perApurDia = fields.Char(
        string="Período de apuração diário do Código",
        xsd_required=True,
        xsd_type="TS_dia",
        help="Período de apuração diário do Código de Receita - CR.",
    )

    eso11_CRDia = fields.Selection(
        TS_CRDIA, string="CRDia", xsd_required=True, xsd_type="TS_CRDia"
    )

    eso11_vrCRDia = fields.Float(
        string="Valor relativo ao Imposto",
        xsd_required=True,
        xsd_type="TS_valorMonetario_positivo",
        help=(
            "Valor relativo ao Imposto de Renda Retido na Fonte sobre "
            "rendimentos do trabalho pagos a residente, para fins fiscais, no "
            "exterior."
        ),
    )

    eso11_vrCRDiaSusp = fields.Float(
        string="Valor que deixou de ser descontado",
        xsd_type="TS_valorMonetario",
        help=(
            "Valor que deixou de ser descontado do trabalhador relativo ao "
            "Imposto de Renda sobre rendimentos do trabalho pagos a residente,"
            " para fins fiscais, no exterior."
        ),
    )
