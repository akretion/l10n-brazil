# Copyright 2023 Akretion - Raphaël Valyi <raphael.valyi@akretion.com>
# License LGPL-3.0 or later (https://www.gnu.org/licenses/lgpl-3.0.en.html).
# Generated by https://github.com/akretion/xsdata-odoo
#
import textwrap
from odoo import fields, models
from .tipos import (
    TIdeBeneficio,
    TIdeEmpregadorCnpj,
    TIdeEventoTrabPj,
)

__NAMESPACE__ = "http://www.esocial.gov.br/schema/evt/evtReativBen/v_S_01_01_00"


class ESocial(models.AbstractModel):
    "S-2418 - Reativação de Benefício - Entes Públicos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.esocial"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial"

    eso11_evtReativBen = fields.Many2one(
        comodel_name="eso.11.evtreativben",
        string="Evento Reativação de Benefício",
        xsd_required=True,
        help=(
            "Evento Reativação de Benefício\nDESCRICAO_COMPLETA:Evento "
            "Reativação de Benefício - Entes Públicos.\nCHAVE_GRUPO: {Id}\nREG"
            "RA:REGRA_ENVIO_PROC_FECHAMENTO\nREGRA:REGRA_EVENTOS_EXTEMP\nREGRA"
            ":REGRA_EXISTE_EVENTO_BENEFICIO_TERMINO\nREGRA:REGRA_EXISTE_INFO_E"
            "MPREGADOR\nREGRA:REGRA_EXTEMP_REATIVACAO\nREGRA:REGRA_REATIVACAO_"
            "EXCLUSAO_EVENTO\nREGRA:REGRA_RETIFICA_MESMO_BENEFICIO\nREGRA:REGR"
            "A_VALIDA_CNPJ"
        ),
    )


class EvtReativBen(models.AbstractModel):
    """Evento Reativação de Benefício
    DESCRICAO_COMPLETA:Evento Reativação de Benefício - Entes Públicos.
    CHAVE_GRUPO: {Id}
    REGRA:REGRA_ENVIO_PROC_FECHAMENTO
    REGRA:REGRA_EVENTOS_EXTEMP
    REGRA:REGRA_EXISTE_EVENTO_BENEFICIO_TERMINO
    REGRA:REGRA_EXISTE_INFO_EMPREGADOR
    REGRA:REGRA_EXTEMP_REATIVACAO
    REGRA:REGRA_REATIVACAO_EXCLUSAO_EVENTO
    REGRA:REGRA_RETIFICA_MESMO_BENEFICIO
    REGRA:REGRA_VALIDA_CNPJ"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.evtreativben"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial.EvtReativBen"

    eso11_ideEvento = fields.Many2one(
        comodel_name="eso.11.tideeventotrabpj",
        string="ideEvento",
        xsd_required=True,
        xsd_type="T_ideEvento_trab_PJ",
    )

    eso11_ideEmpregador = fields.Many2one(
        comodel_name="eso.11.tideempregadorcnpj",
        string="ideEmpregador",
        xsd_required=True,
        xsd_type="T_ideEmpregador_cnpj",
    )

    eso11_ideBeneficio = fields.Many2one(
        comodel_name="eso.11.tidebeneficio",
        string="ideBeneficio",
        xsd_required=True,
        xsd_type="T_ideBeneficio",
    )

    eso11_infoReativ = fields.Many2one(
        comodel_name="eso.11.inforeativ",
        string="Informações da reativação do benefício",
        xsd_required=True,
        help=(
            "Informações da reativação do benefício.\nCHAVE_GRUPO: " "{dtEfetReativ*}"
        ),
    )

    eso11_Id = fields.Char(string="Id", xsd_required=True, xsd_type="TS_Id")


class InfoReativ(models.AbstractModel):
    """Informações da reativação do benefício.
    CHAVE_GRUPO: {dtEfetReativ*}"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.inforeativ"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial.EvtReativBen.InfoReativ"

    eso11_dtEfetReativ = fields.Date(
        string="data da efetiva reativação do benefício",
        xsd_required=True,
        xsd_type="xs:date",
        help=(
            "data da efetiva reativação do benefício.\nValidação: Deve ser "
            "posterior à data de cessação do benefício e igual ou anterior à "
            "data atual."
        ),
    )

    eso11_dtEfeito = fields.Date(
        string="Data de início dos efeitos financeiros",
        xsd_required=True,
        xsd_type="xs:date",
        help=(
            "Data de início dos efeitos financeiros da reativação do "
            "benefício.\nValidação: Deve ser uma data igual ou anterior à data"
            " da efetiva reativação do benefício e posterior à data de sua "
            "cessação."
        ),
    )
