# Copyright 2023 Akretion - Raphaël Valyi <raphael.valyi@akretion.com>
# License LGPL-3.0 or later (https://www.gnu.org/licenses/lgpl-3.0.en.html).
# Generated by https://github.com/akretion/xsdata-odoo
#
import textwrap
from odoo import fields, models
from .tipos import (
    TSSIMNAO,
    TSTPPROC124,
    TSUF,
    TIdeEmpregador,
    TIdeEventoEvtTab,
    TNovaValidade,
)

__NAMESPACE__ = "http://www.esocial.gov.br/schema/evt/evtTabProcesso/v_S_01_01_00"

"""Indicativo da autoria da ação judicial.
    Validação: Preenchimento obrigatório se
    {tpProc}(1070_infoProcesso_inclusao_ideProcesso_tpProc) = [2]."""
T_DADOSPROC_INDAUTORIA = [
    ("1", "Próprio contribuinte"),
    ("2", "Outra entidade, empresa ou empregado"),
]

"Indicativo da matéria do processo."
T_DADOSPROC_INDMATPROC = [
    ("1", "Exclusivamente tributária ou tributária e FGTS"),
    (
        "7",
        "Exclusivamente FGTS e/ou Contribuição Social Rescisória (Lei Complementar 110/2001)",
    ),
]

"""Indicativo de suspensão da exigibilidade.
    Validação: Se {tpProc}(1070_infoProcesso_inclusao_ideProcesso_tpProc) = [1],
    deve ser preenchido com [03, 14, 92].
    Se {tpProc}(1070_infoProcesso_inclusao_ideProcesso_tpProc) = [2], deve ser
    preenchido com [01, 02, 04, 05, 08, 09, 10, 11, 12, 13, 90, 92].
    Se {tpProc}(1070_infoProcesso_inclusao_ideProcesso_tpProc) = [4], deve ser
    preenchido com [14]."""
INFOSUSP_INDSUSP = [
    ("01", "Liminar em mandado de segurança"),
    ("02", "Depósito judicial do montante integral"),
    ("03", "Depósito administrativo do montante integral"),
    ("04", "Antecipação de tutela"),
    ("05", "Liminar em medida cautelar"),
    ("08", "Sentença em mandado de segurança favorável ao contribuinte"),
    (
        "09",
        "Sentença em ação ordinária favorável ao contribuinte e confirmada pelo TRF",
    ),
    ("10", "Acórdão do TRF favorável ao contribuinte"),
    ("11", "Acórdão do STJ em recurso especial favorável ao contribuinte"),
    ("12", "Acórdão do STF em recurso extraordinário favorável ao contribuinte"),
    ("13", "Sentença 1ª instância não transitada em julgado com efeito suspensivo"),
    ("14", "Contestação administrativa FAP"),
    ("90", "Decisão definitiva a favor do contribuinte"),
    ("92", "Sem suspensão da exigibilidade"),
]


class TDadosProc(models.AbstractModel):
    "Dados do processo."
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.tdadosproc"
    _inherit = "spec.mixin.eso"
    _binding_type = "TDadosProc"

    eso11_indAutoria = fields.Selection(T_DADOSPROC_INDAUTORIA, string="indAutoria")

    eso11_indMatProc = fields.Selection(
        T_DADOSPROC_INDMATPROC, string="indMatProc", xsd_required=True
    )

    eso11_observacao = fields.Char(
        string="Observações relacionadas ao processo", xsd_type="TS_observacao"
    )

    eso11_dadosProcJud = fields.Many2one(
        comodel_name="eso.11.dadosprocjud",
        string="Informações complementares",
        help=(
            "Informações complementares do processo judicial.\nCONDICAO_GRUPO:"
            " O (se {tpProc}(1070_infoProcesso_inclusao_ideProcesso_tpProc) = "
            "[2] e "
            "{indMatProc}(1070_infoProcesso_inclusao_dadosProc_indMatProc) = "
            "[1]); N (nos demais casos)"
        ),
    )

    eso11_infoSusp = fields.One2many(
        "eso.11.infosusp",
        "eso11_infoSusp_T_dadosProc_id",
        string="Informações de suspensão",
        help=(
            "Informações de suspensão de exigibilidade de "
            "tributos\nDESCRICAO_COMPLETA:Informações de suspensão de "
            "exigibilidade de tributos em virtude de processo administrativo "
            "ou judicial.\nCHAVE_GRUPO: {codSusp}\nCONDICAO_GRUPO: O (se "
            "{indMatProc}(1070_infoProcesso_inclusao_dadosProc_indMatProc) = "
            "[1]); N (nos demais casos)"
        ),
    )


class DadosProcJud(models.AbstractModel):
    """Informações complementares do processo judicial.
    CONDICAO_GRUPO: O (se {tpProc}(1070_infoProcesso_inclusao_ideProcesso_tpProc) =
    [2] e {indMatProc}(1070_infoProcesso_inclusao_dadosProc_indMatProc) = [1]);
    N (nos demais casos)"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.dadosprocjud"
    _inherit = "spec.mixin.eso"
    _binding_type = "TDadosProc.DadosProcJud"

    eso11_ufVara = fields.Selection(
        TS_UF,
        string="Identificação da Unidade da Federação",
        xsd_required=True,
        xsd_type="TS_uf",
        help=("Identificação da Unidade da Federação - UF da Seção Judiciária."),
    )

    eso11_codMunic = fields.Char(
        string="codMunic", xsd_required=True, xsd_type="TS_codMunic"
    )

    eso11_idVara = fields.Char(string="idVara", xsd_required=True)


class InfoSusp(models.AbstractModel):
    """Informações de suspensão de exigibilidade de tributos
    DESCRICAO_COMPLETA:Informações de suspensão de exigibilidade de tributos em
    virtude de processo administrativo ou judicial.
    CHAVE_GRUPO: {codSusp}
    CONDICAO_GRUPO: O (se
    {indMatProc}(1070_infoProcesso_inclusao_dadosProc_indMatProc) = [1]); N
    (nos demais casos)"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.infosusp"
    _inherit = "spec.mixin.eso"
    _binding_type = "TDadosProc.InfoSusp"

    eso11_codSusp = fields.Char(
        string="Código do indicativo da suspensão",
        xsd_required=True,
        xsd_type="TS_codSusp",
        help=("Código do indicativo da suspensão, atribuído pelo empregador."),
    )

    eso11_indSusp = fields.Selection(
        INFOSUSP_INDSUSP, string="indSusp", xsd_required=True
    )

    eso11_dtDecisao = fields.Date(
        string="Data da decisão",
        xsd_required=True,
        xsd_type="xs:date",
        help="Data da decisão, sentença ou despacho administrativo.",
    )

    eso11_indDeposito = fields.Selection(
        TS_SIM_NAO,
        string="Indicativo de depósito",
        xsd_required=True,
        xsd_type="TS_sim_nao",
        help=(
            "Indicativo de depósito do montante integral.\nValidação: Se "
            "{indSusp}(1070_infoProcesso_inclusao_dadosProc_infoSusp_indSusp) "
            "= [90], preencher obrigatoriamente com [N].\nSe "
            "{indSusp}(1070_infoProcesso_inclusao_dadosProc_infoSusp_indSusp) "
            "= [02, 03] preencher obrigatoriamente com [S]."
        ),
    )


class TIdeProcesso(models.AbstractModel):
    """Identificação do processo e validade das informações
    DESCRICAO_COMPLETA:Identificação do processo e período de validade das
    informações.
    CHAVE_GRUPO: {tpProc*}, {nrProc*}, {iniValid*}, {fimValid*}"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.tideprocesso"
    _inherit = "spec.mixin.eso"
    _binding_type = "TIdeProcesso"

    eso11_tpProc = fields.Selection(
        TS_TPPROC_1_2_4, string="tpProc", xsd_required=True, xsd_type="TS_tpProc_1_2_4"
    )

    eso11_nrProc = fields.Char(
        string="número",
        xsd_required=True,
        xsd_type="TS_nrProc_16_17_20_21",
        help=(
            "número do processo administrativo/judicial de acordo com o tipo "
            "informado em {tpProc}(./tpProc).\nValidação: Deve ser um número "
            "de processo válido e:\na) Se {tpProc}(./tpProc) = [1], deve "
            "possuir 17 (dezessete) ou 21 (vinte e um) algarismos;\nb) Se "
            "{tpProc}(./tpProc) = [2], deve possuir 20 (vinte) algarismos;\nc)"
            " Se {tpProc}(./tpProc) = [4], deve possuir 16 (dezesseis) "
            "algarismos."
        ),
    )

    eso11_iniValid = fields.Char(
        string="iniValid", xsd_required=True, xsd_type="TS_iniValid"
    )

    eso11_fimValid = fields.Char(string="fimValid", xsd_type="TS_fimValid")


class ESocial(models.AbstractModel):
    "S-1070 - Tabela de Processos Administrativos/Judiciais"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.esocial"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial"

    eso11_evtTabProcesso = fields.Many2one(
        comodel_name="eso.11.evttabprocesso",
        string="Evento Tabela de Processos",
        xsd_required=True,
        help=(
            "Evento Tabela de Processos\nDESCRICAO_COMPLETA:Evento Tabela de "
            "Processos Administrativos/Judiciais.\nCHAVE_GRUPO: {Id}\nREGRA:RE"
            "GRA_ENVIO_PROC_FECHAMENTO\nREGRA:REGRA_EXISTE_INFO_EMPREGADOR\nRE"
            "GRA:REGRA_PERMITE_ALT_EXCL_CODSUSP\nREGRA:REGRA_TABGERAL_ALTERACA"
            "O_PERIODO_CONFLITANTE\nREGRA:REGRA_TABGERAL_EXISTE_REGISTRO_ALTER"
            "ADO\nREGRA:REGRA_TABGERAL_EXISTE_REGISTRO_EXCLUIDO\nREGRA:REGRA_T"
            "ABGERAL_INCLUSAO_PERIODO_CONFLITANTE\nREGRA:REGRA_TAB_PERMITE_EXC"
            "LUSAO\nREGRA:REGRA_VALIDA_DT_FUTURA\nREGRA:REGRA_VALIDA_PROCESSO"
        ),
    )


class EvtTabProcesso(models.AbstractModel):
    """Evento Tabela de Processos
    DESCRICAO_COMPLETA:Evento Tabela de Processos Administrativos/Judiciais.
    CHAVE_GRUPO: {Id}
    REGRA:REGRA_ENVIO_PROC_FECHAMENTO
    REGRA:REGRA_EXISTE_INFO_EMPREGADOR
    REGRA:REGRA_PERMITE_ALT_EXCL_CODSUSP
    REGRA:REGRA_TABGERAL_ALTERACAO_PERIODO_CONFLITANTE
    REGRA:REGRA_TABGERAL_EXISTE_REGISTRO_ALTERADO
    REGRA:REGRA_TABGERAL_EXISTE_REGISTRO_EXCLUIDO
    REGRA:REGRA_TABGERAL_INCLUSAO_PERIODO_CONFLITANTE
    REGRA:REGRA_TAB_PERMITE_EXCLUSAO
    REGRA:REGRA_VALIDA_DT_FUTURA
    REGRA:REGRA_VALIDA_PROCESSO"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.evttabprocesso"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial.EvtTabProcesso"

    eso11_ideEvento = fields.Many2one(
        comodel_name="eso.11.tideeventoevttab",
        string="ideEvento",
        xsd_required=True,
        xsd_type="T_ideEvento_evtTab",
    )

    eso11_ideEmpregador = fields.Many2one(
        comodel_name="eso.11.tideempregador",
        string="ideEmpregador",
        xsd_required=True,
        xsd_type="T_ideEmpregador",
    )

    eso11_infoProcesso = fields.Many2one(
        comodel_name="eso.11.infoprocesso",
        string="Informações do processo",
        xsd_required=True,
    )

    eso11_Id = fields.Char(string="Id", xsd_required=True, xsd_type="TS_Id")


class InfoProcesso(models.AbstractModel):
    "Informações do processo."
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.infoprocesso"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial.EvtTabProcesso.InfoProcesso"

    eso11_inclusao = fields.Many2one(
        comodel_name="eso.11.inclusao",
        string="Inclusão de novas informações",
        choice="infoprocesso",
        xsd_choice_required=True,
        help="Inclusão de novas informações.\nCONDICAO_GRUPO: OC",
    )

    eso11_alteracao = fields.Many2one(
        comodel_name="eso.11.alteracao",
        string="Alteração das informações",
        choice="infoprocesso",
        xsd_choice_required=True,
        help="Alteração das informações.\nCONDICAO_GRUPO: OC",
    )

    eso11_exclusao = fields.Many2one(
        comodel_name="eso.11.exclusao",
        string="Exclusão das informações",
        choice="infoprocesso",
        xsd_choice_required=True,
        help="Exclusão das informações.\nCONDICAO_GRUPO: OC",
    )


class Inclusao(models.AbstractModel):
    """Inclusão de novas informações.
    CONDICAO_GRUPO: OC"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.inclusao"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial.EvtTabProcesso.InfoProcesso.Inclusao"

    eso11_ideProcesso = fields.Many2one(
        comodel_name="eso.11.tideprocesso",
        string="ideProcesso",
        xsd_required=True,
        xsd_type="T_ideProcesso",
    )

    eso11_dadosProc = fields.Many2one(
        comodel_name="eso.11.tdadosproc",
        string="dadosProc",
        xsd_required=True,
        xsd_type="T_dadosProc",
    )


class Alteracao(models.AbstractModel):
    """Alteração das informações.
    CONDICAO_GRUPO: OC"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.alteracao"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial.EvtTabProcesso.InfoProcesso.Alteracao"

    eso11_ideProcesso = fields.Many2one(
        comodel_name="eso.11.tideprocesso",
        string="ideProcesso",
        xsd_required=True,
        xsd_type="T_ideProcesso",
    )

    eso11_dadosProc = fields.Many2one(
        comodel_name="eso.11.tdadosproc",
        string="dadosProc",
        xsd_required=True,
        xsd_type="T_dadosProc",
    )

    eso11_novaValidade = fields.Many2one(
        comodel_name="eso.11.tnovavalidade",
        string="novaValidade",
        xsd_type="T_novaValidade",
    )


class Exclusao(models.AbstractModel):
    """Exclusão das informações.
    CONDICAO_GRUPO: OC"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "eso.11.exclusao"
    _inherit = "spec.mixin.eso"
    _binding_type = "ESocial.EvtTabProcesso.InfoProcesso.Exclusao"

    eso11_ideProcesso = fields.Many2one(
        comodel_name="eso.11.tideprocesso",
        string="ideProcesso",
        xsd_required=True,
        xsd_type="T_ideProcesso",
    )
